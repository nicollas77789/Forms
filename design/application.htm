<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nexus Recruit | Aplicação Design/Divulgação</title>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Rajdhani:wght@300;500;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #00f0ff;
      --primary-dark: #008c99;
      --secondary: #ff2d75;
      --accent: #f0e800;
      --dark: #0a0a14;
      --darker: #05050a;
      --light: #e0e0e0;
      --success: #00ff88;
      --error: #ff2d55;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: radial-gradient(ellipse at center, var(--darker) 0%, var(--dark) 100%);
      color: var(--light);
      font-family: 'Rajdhani', sans-serif;
      line-height: 1.6;
      min-height: 100vh;
      padding: 20px;
    }

    .form-header {
      text-align: center;
      margin-bottom: 30px;
      padding: 20px;
      background: linear-gradient(to right, rgba(10, 10, 20, 0.8), rgba(5, 5, 10, 0.9));
      border-bottom: 1px solid var(--primary);
      position: relative;
      overflow: hidden;
    }

    .form-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        rgba(0, 240, 255, 0.1) 0%,
        rgba(0, 240, 255, 0) 20%,
        rgba(0, 240, 255, 0) 80%,
        rgba(0, 240, 255, 0.1) 100%
      );
    }

    .form-header h1 {
      font-family: 'Orbitron', sans-serif;
      color: var(--primary);
      font-size: 2.2rem;
      letter-spacing: 3px;
      margin-bottom: 10px;
      position: relative;
    }

    .cyber-form-container {
      max-width: 1000px;
      margin: 0 auto;
      padding: 20px;
    }

    .form-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px;
    }

    @media (max-width: 768px) {
      .form-grid {
        grid-template-columns: 1fr;
      }
    }

    .cyber-card {
      background: linear-gradient(135deg, rgba(10, 10, 20, 0.8), rgba(5, 5, 10, 0.9));
      border: 1px solid var(--primary);
      border-radius: 8px;
      padding: 25px;
      box-shadow: 0 5px 15px rgba(0, 240, 255, 0.1);
      transition: all 0.3s ease;
      margin-bottom: 30px;
    }

    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 1px solid rgba(0, 240, 255, 0.3);
    }

    .card-header h2 {
      color: var(--primary);
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      margin: 0;
      font-size: 1.3rem;
    }

    .card-icon {
      font-size: 1.8rem;
      opacity: 0.7;
    }

    .cyber-input, .cyber-textarea, .cyber-select {
      margin-bottom: 20px;
      position: relative;
    }

    .cyber-input label, .cyber-textarea label, .cyber-select label {
      display: block;
      margin-bottom: 8px;
      color: var(--primary);
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      font-size: 0.9rem;
    }

    .cyber-input input, .cyber-textarea textarea, .cyber-select select {
      width: 100%;
      padding: 12px;
      background-color: rgba(10, 10, 20, 0.7);
      border: 1px solid var(--primary);
      border-radius: 4px;
      color: var(--light);
      font-family: 'Rajdhani', sans-serif;
      transition: all 0.3s ease;
    }

    .cyber-textarea textarea {
      min-height: 100px;
      resize: vertical;
    }

    .cyber-input input:focus, .cyber-textarea textarea:focus, .cyber-select select:focus {
      outline: none;
      border-color: var(--secondary);
      box-shadow: 0 0 10px rgba(255, 45, 117, 0.5);
    }

    .char-counter {
      text-align: right;
      font-size: 0.8rem;
      color: var(--primary);
      margin-top: 5px;
    }

    .cyber-select {
      position: relative;
    }

    .select-arrow {
      position: absolute;
      top: 50%;
      right: 15px;
      width: 0;
      height: 0;
      border-left: 6px solid transparent;
      border-right: 6px solid transparent;
      border-top: 6px solid var(--primary);
      pointer-events: none;
      transform: translateY(-50%);
    }

    .cyber-checkbox-group, .cyber-radio-group {
      margin-bottom: 20px;
    }

    .cyber-checkbox-group label, .cyber-radio-group label {
      display: block;
      margin-bottom: 15px;
      color: var(--primary);
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      font-size: 0.9rem;
    }

    .checkbox-grid, .radio-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 15px;
    }

    .cyber-checkbox, .cyber-radio {
      position: relative;
      display: flex;
      align-items: center;
      cursor: pointer;
    }

    .cyber-checkbox input, .cyber-radio input {
      position: absolute;
      opacity: 0;
      cursor: pointer;
    }

    .cyber-checkbox label, .cyber-radio label {
      color: var(--light);
      font-family: 'Rajdhani', sans-serif;
      margin-left: 30px;
      cursor: pointer;
      letter-spacing: normal;
    }

    .checkmark, .radiomark {
      position: absolute;
      top: 0;
      left: 0;
      height: 20px;
      width: 20px;
      background-color: transparent;
      border: 1px solid var(--primary);
      transition: all 0.3s ease;
    }

    .radiomark {
      border-radius: 50%;
    }

    .cyber-checkbox:hover .checkmark,
    .cyber-radio:hover .radiomark {
      background-color: rgba(0, 240, 255, 0.1);
    }

    .cyber-checkbox input:checked ~ .checkmark,
    .cyber-radio input:checked ~ .radiomark {
      background-color: var(--primary);
    }

    .checkmark::after {
      content: '';
      position: absolute;
      display: none;
      left: 7px;
      top: 3px;
      width: 5px;
      height: 10px;
      border: solid var(--dark);
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }

    .radiomark::after {
      content: '';
      position: absolute;
      display: none;
      top: 6px;
      left: 6px;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: var(--dark);
    }

    .cyber-checkbox input:checked ~ .checkmark::after,
    .cyber-radio input:checked ~ .radiomark::after {
      display: block;
    }

    .form-footer {
      position: sticky;
      bottom: 20px;
      background: rgba(5, 5, 10, 0.9);
      padding: 15px;
      border-top: 1px solid var(--primary);
      z-index: 99;
      margin-top: 40px;
      text-align: center;
    }

    @media (max-width: 768px) {
      .form-footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        margin: 0;
        padding: 10px;
      }
    }

    .cyber-button {
      position: relative;
      display: inline-block;
      padding: 15px 30px;
      background-color: transparent;
      border: none;
      cursor: pointer;
      overflow: hidden;
      transition: all 0.3s ease;
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      font-weight: bold;
      text-transform: uppercase;
    }

    .cyber-button .btn-text {
      position: relative;
      z-index: 2;
      color: var(--light);
    }

    .cyber-button .btn-glow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, var(--primary), var(--secondary));
      z-index: 1;
      opacity: 0.7;
      transition: all 0.3s ease;
    }

    .cyber-button:hover .btn-glow {
      opacity: 1;
      box-shadow: 0 0 15px var(--primary);
    }

    .cyber-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(5, 5, 10, 0.9);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.3s ease;
    }

    .cyber-modal.active {
      opacity: 1;
      pointer-events: all;
    }

    .modal-content {
      background: linear-gradient(135deg, rgba(10, 10, 20, 0.9), rgba(5, 5, 10, 0.95));
      border: 1px solid var(--primary);
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      padding: 30px;
      position: relative;
      box-shadow: 0 10px 30px rgba(0, 240, 255, 0.2);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 1px solid var(--primary);
    }

    .modal-header h3 {
      color: var(--primary);
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
    }

    .modal-close {
      color: var(--light);
      font-size: 1.5rem;
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .modal-close:hover {
      color: var(--secondary);
    }

    .upload-progress {
      height: 20px;
      background-color: rgba(0, 240, 255, 0.1);
      border-radius: 10px;
      margin-bottom: 15px;
      position: relative;
      overflow: hidden;
    }

    .progress-bar {
      height: 100%;
      width: 0%;
      background: linear-gradient(90deg, var(--primary), var(--secondary));
      border-radius: 10px;
      transition: width 0.5s ease;
    }

    .progress-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: var(--dark);
      font-family: 'Orbitron', sans-serif;
      font-size: 0.8rem;
      font-weight: bold;
    }

    .upload-status {
      color: var(--light);
      text-align: center;
      font-family: 'Rajdhani', sans-serif;
      min-height: 40px;
    }

    .expandable-section {
      margin-bottom: 20px;
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      background: rgba(0, 240, 255, 0.1);
      border: 1px solid var(--primary);
      border-radius: 4px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .section-header:hover {
      background: rgba(0, 240, 255, 0.2);
    }

    .section-header h3 {
      color: var(--primary);
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      margin: 0;
    }

    .section-header .toggle-icon {
      color: var(--primary);
      font-size: 1.2rem;
      transition: transform 0.3s ease;
    }

    .section-header.active .toggle-icon {
      transform: rotate(45deg);
    }

    .section-content {
      padding: 15px;
      background: rgba(5, 5, 10, 0.7);
      border: 1px solid var(--primary);
      border-top: none;
      border-radius: 0 0 4px 4px;
      display: none;
    }

    .section-header.active + .section-content {
      display: block;
    }
  </style>
</head>
<body>
  <!-- Header do Formulário -->
  <div class="form-header">
    <h1>🎨 APLICAÇÃO DE DESIGN/DIVULGAÇÃO</h1>
  </div>

  <!-- Container Principal -->
  <div class="cyber-form-container">
    <!-- Seção 1: Informações Básicas -->
    <div class="cyber-card">
      <div class="card-header">
        <h2>INFORMAÇÕES BÁSICAS</h2>
        <div class="card-icon">📋</div>
      </div>

      <div class="cyber-input">
        <label for="fullName">NOME COMPLETO</label>
        <input type="text" id="fullName" name="fullName" required>
      </div>

      <div class="cyber-input">
        <label for="age">IDADE</label>
        <input type="number" id="age" name="age" min="16" max="99" required>
      </div>

      <div class="cyber-input">
        <label for="discordTag">ID DISCORD (com TAG)</label>
        <input type="text" id="discordTag" name="discordTag" placeholder="usuário#0000" required>
      </div>

      <div class="cyber-input">
        <label for="email">E-MAIL PARA CONTATO</label>
        <input type="email" id="email" name="email" required>
      </div>
    </div>

    <!-- Seção 2: Habilidades e Especialidades -->
    <div class="cyber-card">
      <div class="card-header">
        <h2>HABILIDADES</h2>
        <div class="card-icon">🛠️</div>
      </div>

      <div class="cyber-checkbox-group">
        <label>QUAL SUA ESPECIALIDADE?</label>
        <div class="checkbox-grid">
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill1" name="skills[]" value="FOTO">
            <label for="skill1">EDIÇÃO DE FOTOS</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill2" name="skills[]" value="VIDEO">
            <label for="skill2">EDIÇÃO DE VÍDEOS</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill3" name="skills[]" value="BOTS">
            <label for="skill3">CONFIGURAÇÃO DE BOTS</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill4" name="skills[]" value="SOCIAL">
            <label for="skill4">GERENCIAMENTO DE REDES</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill5" name="skills[]" value="DESIGN">
            <label for="skill5">DESIGN GRÁFICO</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="skill6" name="skills[]" value="STREAM">
            <label for="skill6">OVERLAYS PARA STREAM</label>
            <div class="checkmark"></div>
          </div>
        </div>
      </div>

      <div class="cyber-textarea">
        <label for="experience">EXPERIÊNCIA ANTERIOR (Onde já trabalhou, projetos relevantes)</label>
        <textarea id="experience" name="experience" rows="4" required></textarea>
        <div class="char-counter"><span id="expCounter">0</span>/500</div>
      </div>

      <div class="cyber-textarea">
        <label for="portfolio">LINK PARA PORTFÓLIO (Opcional)</label>
        <textarea id="portfolio" name="portfolio" rows="2" placeholder="Links para seus trabalhos anteriores"></textarea>
      </div>
    </div>

    <!-- Seção 3: Ferramentas e Disponibilidade -->
    <div class="cyber-card">
      <div class="card-header">
        <h2>FERRAMENTAS E DISPONIBILIDADE</h2>
        <div class="card-icon">⏱️</div>
      </div>

      <div class="cyber-checkbox-group">
        <label>QUAIS FERRAMENTAS VOCÊ DOMINA?</label>
        <div class="checkbox-grid">
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool1" name="tools[]" value="PHOTOSHOP">
            <label for="tool1">PHOTOSHOP</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool2" name="tools[]" value="PREMIERE">
            <label for="tool2">PREMIERE</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool3" name="tools[]" value="AFTER">
            <label for="tool3">AFTER EFFECTS</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool4" name="tools[]" value="ILLUSTRATOR">
            <label for="tool4">ILLUSTRATOR</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool5" name="tools[]" value="DISCORD">
            <label for="tool5">DISCORD BOTS</label>
            <div class="checkmark"></div>
          </div>
          <div class="cyber-checkbox">
            <input type="checkbox" id="tool6" name="tools[]" value="FIGMA">
            <label for="tool6">FIGMA/CANVA</label>
            <div class="checkmark"></div>
          </div>
        </div>
      </div>

      <div class="cyber-input">
        <label for="hoursWeek">HORAS DISPONÍVEIS POR SEMANA</label>
        <input type="number" id="hoursWeek" name="hoursWeek" min="5" max="40" required>
      </div>

      <div class="cyber-textarea">
        <label for="whyYou">POR QUE VOCÊ SERIA UM BOM DESIGN/DIVULGADOR PARA NÓS?</label>
        <textarea id="whyYou" name="whyYou" rows="4" required></textarea>
        <div class="char-counter"><span id="whyCounter">0</span>/300</div>
      </div>
    </div>

    <!-- Seção 4: Teste Criativo -->
    <div class="expandable-section">
      <div class="section-header">
        <h3>TESTE CRIATIVO (Clique para expandir)</h3>
        <span class="toggle-icon">+</span>
      </div>
      <div class="section-content">
        <div class="cyber-textarea">
          <label for="creative1">1. Descreva como você promoveria um novo evento do servidor</label>
          <textarea id="creative1" name="creative1" rows="4" required></textarea>
        </div>

        <div class="cyber-textarea">
          <label for="creative2">2. Você recebeu um briefing vago para criar uma arte. Como procede?</label>
          <textarea id="creative2" name="creative2" rows="4" required></textarea>
        </div>

        <div class="cyber-textarea">
          <label for="creative3">3. Um bot está com problemas de performance. Como você diagnosticaria?</label>
          <textarea id="creative3" name="creative3" rows="4" required></textarea>
        </div>
      </div>
    </div>

    <!-- Rodapé do Formulário -->
    <div class="form-footer">
      <button type="button" class="cyber-button" id="submitBtn">
        <span class="btn-text">ENVIAR APLICAÇÃO</span>
        <span class="btn-glow"></span>
      </button>
    </div>
  </div>

  <!-- Modal de Envio -->
  <div class="cyber-modal" id="submitModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>TRANSMISSÃO DE DADOS</h3>
        <div class="modal-close" id="modalClose">&times;</div>
      </div>
      <div class="modal-body">
        <div class="upload-progress">
          <div class="progress-bar" id="uploadBar"></div>
          <div class="progress-text" id="progressText">0%</div>
        </div>
        <div class="upload-status" id="uploadStatus">PREPARANDO TRANSMISSÃO...</div>
      </div>
    </div>
  </div>

  <script>
    // Configuração do Webhook
    const WEBHOOK_URL = 'https://discord.com/api/webhooks/1392917475687010466/_r7N8oXtXZR4L-dMYKc8ujzlUWZwZmEUX_p9LQGUThG_T-yvUMcSEWztB8_BO_q7ikdd';

    // Atualiza contadores de caracteres
    document.getElementById('experience').addEventListener('input', function() {
      document.getElementById('expCounter').textContent = this.value.length;
    });

    document.getElementById('whyYou').addEventListener('input', function() {
      document.getElementById('whyCounter').textContent = this.value.length;
    });

    // Seções expansíveis
    document.querySelectorAll('.section-header').forEach(header => {
      header.addEventListener('click', function() {
        this.classList.toggle('active');
        const icon = this.querySelector('.toggle-icon');
        icon.textContent = this.classList.contains('active') ? '−' : '+';
      });
    });

    // Função para obter o IP do usuário
    async function getUserIP() {
      try {
        const response = await fetch('https://api.ipify.org?format=json');
        const data = await response.json();
        return data.ip;
      } catch (error) {
        console.error('Erro ao obter IP:', error);
        return 'Não disponível';
      }
    }

    // Função para obter informações do navegador
    function getBrowserInfo() {
      return {
        userAgent: navigator.userAgent,
        platform: navigator.platform,
        screen: `${window.screen.width}x${window.screen.height}`,
        language: navigator.language,
        cookies: navigator.cookieEnabled ? 'Ativados' : 'Desativados'
      };
    }

    // Função para enviar para o Discord
    async function sendToDiscord(formData, userInfo) {
      const embed = {
        title: '🎨 Nova Aplicação de Design/Divulgação Recebida',
        color: 0x00f0ff,
        fields: [
          { name: '👤 Nome', value: formData.fullName || 'Não informado', inline: true },
          { name: '🎂 Idade', value: formData.age || 'Não informado', inline: true },
          { name: '💬 Discord', value: formData.discordTag || 'Não informado', inline: true },
          { name: '📧 E-mail', value: formData.email || 'Não informado', inline: true },
          { name: '🛠️ Especialidades', value: formData.skills?.join(', ') || 'Nenhuma' },
          { name: '🧰 Ferramentas', value: formData.tools?.join(', ') || 'Nenhuma' },
          { name: '⏳ Horas/Semana', value: formData.hoursWeek || 'Não informado', inline: true },
          { name: '📌 Experiência', value: formData.experience?.substring(0, 500) + (formData.experience?.length > 500 ? '...' : '') || 'Não informado' },
          { name: '🔗 Portfólio', value: formData.portfolio || 'Não informado', inline: true },
          { name: '🌟 Por que você?', value: formData.whyYou?.substring(0, 300) + (formData.whyYou?.length > 300 ? '...' : '') || 'Não informado' },
          { name: '🎨 Teste 1', value: formData.creative1?.substring(0, 500) + (formData.creative1?.length > 500 ? '...' : '') || 'Não respondido' },
          { name: '🎨 Teste 2', value: formData.creative2?.substring(0, 500) + (formData.creative2?.length > 500 ? '...' : '') || 'Não respondido' },
          { name: '🎨 Teste 3', value: formData.creative3?.substring(0, 500) + (formData.creative3?.length > 500 ? '...' : '') || 'Não respondido' },
          { name: '🌐 IP', value: userInfo.ip || 'Não disponível', inline: true },
          { name: '🖥️ Dispositivo', value: userInfo.browser.platform || 'Não disponível', inline: true }
        ],
        timestamp: new Date().toISOString(),
        footer: { text: 'Nexus Recruit System • ' + new Date().toLocaleString() }
      };

      const payload = {
        username: 'Nexus Recruit',
        avatar_url: 'https://i.imgur.com/7Y7Xz2A.png',
        embeds: [embed]
      };

      try {
        const response = await fetch(WEBHOOK_URL, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });

        return response.ok;
      } catch (error) {
        console.error('Erro ao enviar para Discord:', error);
        return false;
      }
    }

    // Função principal de envio
    async function handleSubmit(e) {
      e.preventDefault();
      const submitBtn = document.getElementById('submitBtn');
      submitBtn.disabled = true;
      submitBtn.style.pointerEvents = 'none';

      // Mostra o modal de envio
      const modal = document.getElementById('submitModal');
      modal.classList.add('active');

      // Coleta os dados do formulário
      const formData = {
        fullName: document.getElementById('fullName').value,
        age: document.getElementById('age').value,
        discordTag: document.getElementById('discordTag').value,
        email: document.getElementById('email').value,
        skills: Array.from(document.querySelectorAll('input[name="skills[]"]:checked')).map(el => el.value),
        tools: Array.from(document.querySelectorAll('input[name="tools[]"]:checked')).map(el => el.value),
        hoursWeek: document.getElementById('hoursWeek').value,
        experience: document.getElementById('experience').value,
        portfolio: document.getElementById('portfolio').value,
        whyYou: document.getElementById('whyYou').value,
        creative1: document.getElementById('creative1').value,
        creative2: document.getElementById('creative2').value,
        creative3: document.getElementById('creative3').value
      };

      // Coleta informações do usuário
      const userInfo = {
        ip: await getUserIP(),
        browser: getBrowserInfo()
      };

      // Elementos de progresso
      const progressBar = document.getElementById('uploadBar');
      const progressText = document.getElementById('progressText');
      const uploadStatus = document.getElementById('uploadStatus');

      // Simula progresso de upload
      let progress = 0;
      const interval = setInterval(() => {
        progress += 5;
        if (progress > 95) progress = 95;
        progressBar.style.width = `${progress}%`;
        progressText.textContent = `${progress}%`;
        uploadStatus.textContent = progress < 50
          ? 'PREPARANDO DADOS...'
          : progress < 80
            ? 'VALIDANDO INFORMAÇÕES...'
            : 'ENVIANDO PARA O SERVIDOR...';

        if (progress >= 95) {
          clearInterval(interval);
          // Envio real para o Discord
          sendToDiscord(formData, userInfo)
            .then(success => {
              if (success) {
                // Completa a barra de progresso
                progressBar.style.width = '100%';
                progressText.textContent = '100%';
                uploadStatus.innerHTML = '<span style="color: var(--success)">APLICAÇÃO ENVIADA COM SUCESSO!</span>';

                // Limpa o formulário após 3 segundos
                setTimeout(() => {
                  modal.classList.remove('active');
                  document.querySelectorAll('input, textarea, select').forEach(el => el.value = '');
                  document.querySelectorAll('.char-counter span').forEach(el => el.textContent = '0');
                  document.querySelectorAll('input[type="checkbox"]').forEach(el => el.checked = false);
                  submitBtn.disabled = false;
                  submitBtn.style.pointerEvents = 'auto';
                }, 3000);
              } else {
                uploadStatus.innerHTML = '<span style="color: var(--error)">ERRO AO ENVIAR APLICAÇÃO!</span>';
                submitBtn.disabled = false;
                submitBtn.style.pointerEvents = 'auto';
              }
            })
            .catch(error => {
              console.error('Erro no envio:', error);
              uploadStatus.innerHTML = '<span style="color: var(--error)">ERRO NO PROCESSAMENTO!</span>';
              submitBtn.disabled = false;
              submitBtn.style.pointerEvents = 'auto';
            });
        }
      }, 150);
    }

    // Event listeners
    document.getElementById('submitBtn').addEventListener('click', handleSubmit);
    document.getElementById('modalClose').addEventListener('click', function() {
      document.getElementById('submitModal').classList.remove('active');
      document.getElementById('submitBtn').disabled = false;
      document.getElementById('submitBtn').style.pointerEvents = 'auto';
    });
  </script>
</body>
</html>
